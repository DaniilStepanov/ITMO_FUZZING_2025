plugins {
    id 'java'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(25)
    }
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation project(':instrumentation')
    implementation 'org.ow2.asm:asm:9.7'
    implementation group: 'org.jsoup', name: 'jsoup', version: '1.18.1'
    implementation 'com.github.javaparser:javaparser-core:3.26.2'
    implementation 'guru.nidi:graphviz-java:0.18.1'
    implementation("org.antlr:antlr4-runtime:4.13.1")
    implementation group: 'com.github.javaparser', name: 'javaparser-core', version: '3.26.2'
    implementation("net.objecthunter:exp4j:0.4.8")
}

test {
    useJUnitPlatform()
}



// Define a custom task to run your application with a Java agent
task runWithAgent(type: JavaExec) {

    group = "Application"
    description = "Runs the application with a Java agent"

    // Set the main class
//    setMainClass("org.itmo.fuzzing.lect2.CgiDecoder")
    setMainClass("org.itmo.fuzzing.lab1.MazeRunner")

    // Set the classpath
    classpath = sourceSets.main.runtimeClasspath

    doFirst {
        // Get the agent JAR file from the other module's task
        def agentJar = project(':instrumentation').tasks.agentJar.outputs.files.singleFile
    }

    // Add the Java agent argument
    // Replace 'path/to/your/agent.jar' with the actual path to your Java agent JAR
    jvmArgs += [
            '-javaagent:./instrumentation/build/libs/coverage-agent-1.0-SNAPSHOT-agent.jar',
            '--enable-preview'
    ]

}
